<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper">

    <sql id="commonSearchColumns">
        /* commonSearchColumns */
        `no` AS "no",
        `name` AS "name",
        classification AS classification,
        summary AS summary,
        description AS description,
        thumb_img_name AS thumbImgName,
        thumb_img_path AS thumbImgPath,
        use_yn AS useYn,
        user_id AS userId,
        created AS created,
        lastModified AS lastModified
    </sql>


    <sql id="commonInsertColumns">
        /* commonInsertColumns */
        `name`,
        classification,
        summary,
        description,
        thumb_img_name,
        thumb_img_path,
        use_yn,
        user_id,
        created,
        lastModified
    </sql>


    <sql id="procSearch">
        /* procSearch */
        <if test="no != '' and no != null">
            AND `no` = #{no}
        </if>
        <if test="searchKeyword != '' and searchKeyword != null">
            <if test="searchTypeColumn != '' and searchTypeColumn != null">
                <choose>
                    <when test='searchTypeColumn == "name"'>
                        AND LOWER(`name`) LIKE concat('%', #{searchKeyword},'%')
                    </when>
                    <when test='searchTypeColumn == "summary"'>
                        AND LOWER(summary) LIKE concat('%', #{searchKeyword},'%')
                    </when>
                    <when test="searchTypeColumn == 'ALL'">
                        AND (LOWER(`name`) LIKE concat('%', #{searchKeyword},'%') OR LOWER(summary) LIKE concat('%', #{searchKeyword},'%'))
                    </when>
                    <otherwise>
                        AND 1=1
                    </otherwise>
                </choose>
            </if>
        </if>
        <if test="sorg.openpaas.paasta.portal.api.mapper.portal.earchTypeUseYn != '' and searchTypeUseYn != null">
            <choose>
                <when test='searchTypeUseYn == "Y" or searchTypeUseYn == "N"'>
                    AND use_yn = #{searchTypeUseYn}
                </when>
                <otherwise>
                    AND 1=1
                </otherwise>
            </choose>
        </if>
    </sql>


    <select id="getBuildPackCatalogList" resultType="org.openpaas.paasta.portal.api.model.Catalog">
        /* Catalog.getBuildPackCatalogList */
        SELECT
            <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.commonSearchColumns"/>,
            bc.buildpack_name AS buildPackName,
            (SELECT cd.value FROM code_detail cd WHERE cd.key = bc.classification AND cd.group_id = 'BUILD_PACK_CATALOG') AS classificationValue,
            (SELECT cd.summary FROM code_detail cd WHERE cd.key = bc.classification AND cd.group_id = 'BUILD_PACK_CATALOG') AS classificationSummary,
            bc.app_sample_file_name AS appSampleFileName,
            bc.app_sample_file_path AS appSampleFilePath,
            bc.app_sample_file_size AS appSampleFileSize
        FROM buildpack_category bc
        WHERE 1=1
        <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.procSearch"/>
        <if test="buildPackName != '' and buildPackName != null">
            AND bc.buildpack_name = #{buildPackName} AND (bc.app_sample_file_path != null OR bc.app_sample_file_path != '')
        </if>
        ORDER BY bc.no DESC
    </select>


    <select id="getServicePackCatalogList" resultType="org.openpaas.paasta.portal.api.model.Catalog">
        /* Catalog.getServicePackCatalogList */
        SELECT
            <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.commonSearchColumns"/>,
            sc.service_name AS servicePackName,
            (SELECT cd.value FROM code_detail cd WHERE cd.key = sc.classification AND cd.group_id = 'SERVICE_PACK_CATALOG') AS classificationValue,
            (SELECT cd.summary FROM code_detail cd WHERE cd.key = sc.classification AND cd.group_id = 'SERVICE_PACK_CATALOG') AS classificationSummary,
            sc.parameter as parameter,
            sc.app_bind_parameter as app_bind_parameter,
            sc.app_bind_yn AS appBindYn
        FROM servicepack_category sc
        WHERE 1=1
        <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.procSearch"/>
        ORDER BY sc.no DESC
    </select>


    <select id="getBuildPackCatalogCount" resultType="int">
        /* Catalog.getBuildPackCatalogCount */
        SELECT
            COUNT(*)
        FROM buildpack_category bc
        WHERE bc.name = #{name}
    </select>


    <select id="getServicePackCatalogCount" resultType="int">
        /* Catalog.getServicePackCatalogCount */
        SELECT
            COUNT(*)
        FROM servicepack_category sc
        WHERE sc.name = #{name}
    </select>


    <insert id="insertBuildPackCatalog">
        /* Catalog.insertBuildPackCatalog */
        INSERT INTO buildpack_category (
            <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.commonInsertColumns"/>,
            app_sample_file_name,
            app_sample_file_path,
            app_sample_file_size,
            buildpack_name)
        VALUES (
            #{name},
            #{classification},
            #{summary},
            #{description},
            #{thumbImgName},
            #{thumbImgPath},
            #{useYn},
            #{userId},
            now(),
            now(),
            #{appSampleFileName},
            #{appSampleFilePath},
            #{appSampleFileSize},
            #{buildPackName});
    </insert>


    <insert id="insertServicePackCatalog">
        /* Catalog.insertServicePackCatalog */
        INSERT INTO servicepack_category (
            <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.commonInsertColumns"/>,
        service_name, parameter
        <if test="app_bind_parameter != '' and app_bind_parameter != null">
            ,app_bind_parameter
        </if>
        <if test="dashboardUseYn != '' and dashboardUseYn != null">
            ,dashboard_use_yn
        </if>
        <if test="appBindYn != '' and appBindYn != null">
            ,app_bind_yn
        </if>
        )
        VALUES (
            #{name},
            #{classification},
            #{summary},
            #{description},
            #{thumbImgName},
            #{thumbImgPath},
            #{useYn},
            #{userId},
            now(),
            now(),
            #{servicePackName},
            #{parameter}
        <if test="app_bind_parameter != '' and app_bind_parameter != null">
        ,#{app_bind_parameter}
        </if>
        <if test="dashboardUseYn != '' and dashboardUseYn != null">
        ,#{dashboardUseYn}
        </if>
        <if test="appBindYn != '' and appBindYn != null">
        ,#{appBindYn}
        </if>
        )
    </insert>


    <update id="updateBuildPackCatalog" >
        /* Catalog.updateBuildPackCatalog */
        UPDATE buildpack_category SET
            <if test="name != '' and name != null">
                `name` = #{name},
            </if>
            <if test="classification != '' and classification != null">
                classification = #{classification},
            </if>
            <if test="summary != '' and summary != null">
            <![CDATA[
                summary = #{summary},
            ]]>
            </if>
            <if test="description != '' and description != null">
            <![CDATA[
                description = #{description},
            ]]>
            </if>
            thumb_img_name = #{thumbImgName},
            thumb_img_path = #{thumbImgPath},
            <if test="useYn != '' and useYn != null">
                use_yn = #{useYn},
            </if>
            <if test="userId != '' and userId != null">
                user_id = #{userId},
            </if>
            app_sample_file_name = #{appSampleFileName},
            app_sample_file_path = #{appSampleFilePath},
            app_sample_file_size = #{appSampleFileSize},
            <if test="buildPackName != '' and buildPackName != null">
                buildpack_name = #{buildPackName},
            </if>
            lastModified = now()
        WHERE `no` = #{no}
    </update>


    <update id="updateServicePackCatalog" >
        /* Catalog.updateServicePackCatalog */
        UPDATE servicepack_category SET
            <if test="name != '' and name != null">
                `name` = #{name},
            </if>
            <if test="classification != '' and classification != null">
                classification = #{classification},
            </if>
            <if test="summary != '' and summary != null">
            <![CDATA[
                summary = #{summary},
            ]]>
            </if>
            <if test="description != '' and description != null">
            <![CDATA[
                description = #{description},
            ]]>
            </if>
            thumb_img_name = #{thumbImgName},
            thumb_img_path = #{thumbImgPath},
            <if test="useYn != '' and useYn != null">
                use_yn = #{useYn},
            </if>
            <if test="dashboardUseYn != '' and dashboardUseYn != null">
                dashboard_use_yn = #{dashboardUseYn},
            </if>
            <if test="userId != '' and userId != null">
                user_id = #{userId},
            </if>
            <if test="servicePackName != '' and servicePackName != null">
                service_name = #{servicePackName},
            </if>
            <if test="appBindYn != '' and appBindYn != null">
                app_bind_yn = #{appBindYn},
            </if>
            lastModified = now(),
            parameter = #{parameter},
            app_bind_parameter = #{app_bind_parameter}
        WHERE `no` = #{no}
    </update>


    <delete id="deleteBuildPackCatalog">
        /* Catalog.deleteBuildPackCatalog */
        DELETE FROM buildpack_category
        WHERE `no` = #{no}
    </delete>


    <delete id="deleteServicePackCatalog">
        /* Catalog.deleteServicePackCatalog */
        DELETE FROM servicepack_category
        WHERE `no` = #{no}
    </delete>


    <select id="getCheckDeleteBuildPackCatalogCount" resultType="int">
        /* Catalog.getCheckDeleteBuildPackCatalogCount */
        SELECT
            COUNT(*)
        FROM starter_buildpack_relation sbr
        WHERE sbr.buildpack_category_no = #{no}
    </select>


    <select id="getCheckDeleteServicePackCatalogCount" resultType="int">
        /* Catalog.getCheckDeleteServicePackCatalogCount */
        SELECT
            COUNT(*)
        FROM starter_servicepack_relation ssr
        WHERE ssr.servicepack_category_no = #{no}
    </select>


    <select id="getStarterCatalogCount" resultType="int">
        /* Catalog.getBuildPackCatalogCount */
        SELECT
            COUNT(*)
        FROM starter_category sc
        WHERE sc.name = #{name}
    </select>


    <select id="getStarterNamesList" resultType="org.openpaas.paasta.portal.api.model.Catalog">
        /* Catalog.getStarterNamesList */
        SELECT
            sc.no AS "no",
            sc.name AS "name",
            sc.summary AS summary,
            sc.classification AS classification,
            sc.use_yn AS useYn,
            sc.description AS description,
            sc.thumb_img_name AS thumbImgName,
            sc.thumb_img_path AS thumbImgPath,
            (SELECT cd.value FROM code_detail cd WHERE cd.key = sc.classification AND cd.group_id = 'STARTER_CATALOG') AS classificationValue,
            (SELECT cd.summary FROM code_detail cd WHERE cd.key = sc.classification AND cd.group_id = 'STARTER_CATALOG') AS classificationSummary
        FROM starter_category sc
        WHERE 1=1
        <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.procSearch"/>
        ORDER BY sc.no DESC
    </select>


    <select id="getBuildPackNamesList" resultType="org.openpaas.paasta.portal.api.model.Catalog">
        /* Catalog.getBuildPackNamesList */
        SELECT
            bc.no,
            bc.name
        FROM buildpack_category bc
    </select>


    <select id="getServicePackNamesList" resultType="org.openpaas.paasta.portal.api.model.Catalog">
        /* Catalog.getServicePackNamesList */
        SELECT
            sc.no,
            sc.name
        FROM servicepack_category sc
    </select>


    <select id="getSelectedServicePackList" resultType="Integer">
        /* Catalog.getSelectedServicePackList */
        SELECT
            ssr.servicepack_category_no
        FROM starter_servicepack_relation ssr
        WHERE ssr.starter_category_no = ${no}
        ORDER BY ssr.servicepack_category_no
    </select>


    <select id="getOneStarterCatalog" resultType="org.openpaas.paasta.portal.api.model.Catalog">
        /* Catalog.getOneStarterCatalog */
        SELECT
            <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.commonSearchColumns"/>,
            (SELECT sbr.buildpack_category_no FROM starter_buildpack_relation sbr WHERE sbr.starter_category_no = #{no}) AS buildPackCategoryNo,
            sc.no AS starterCategoryNo
        FROM starter_category sc
        WHERE sc.no = #{no}
    </select>


    <select id="getStarterCatalogMaxNumber" resultType="Integer">
        /* Catalog.getStarterCatalogMaxNumber */
        SELECT MAX(sc.no) FROM starter_category sc
    </select>


    <insert id="insertStarterCatalog">
        /* Catalog.insertStarterCatalog */
        WITH ins1 AS (
        INSERT INTO starter_category (
            NAME,
            CLASSIFICATION,
            SUMMARY,
            DESCRIPTION,
            THUMB_IMG_NAME,
            THUMB_IMG_PATH,
            USE_YN,
            USER_ID,
            created,
            lastModified
        )
        VALUES (
            #{name},
            #{classification},
            #{summary},
            #{description},
            #{thumbImgName},
            #{thumbImgPath},
            #{useYn},
            #{userId},
            now(),
            now())
        RETURNING no
        ) INSERT INTO STARTER_BUILDPACK_RELATION (starter_category_no, buildpack_category_no)
        VALUES ((SELECT no FROM ins1), #{buildPackCategoryNo});
    </insert>


    <insert id="insertSelectedServicePackList">
        /* Catalog.insertSelectedServicePackList */
        INSERT INTO starter_servicepack_relation (starter_category_no, servicepack_category_no)
        VALUES((SELECT no FROM starter_category ORDER BY created DESC limit 1), #{selectedServicePackCategoryNoListValue});
    </insert>


    <insert id="insertSelectedServicePackListForUpdate">
        /* Catalog.insertSelectedServicePackList */
        INSERT INTO starter_servicepack_relation (starter_category_no, servicepack_category_no)
        VALUES(#{param.no}, #{selectedServicePackCategoryNoListValue});
    </insert>


    <update id="updateStarterCatalog" >
        /* Catalog.updateStarterCatalog */
        WITH ins1 AS (
        UPDATE starter_category SET
        <if test="param.name != '' and param.name != null">
            <![CDATA[
                NAME = #{param.name},
            ]]>
        </if>
        <if test="param.classification != '' and param.classification != null">
            <![CDATA[
                classification = #{param.classification},
            ]]>
        </if>
        <if test="param.summary != '' and param.summary != null">
            <![CDATA[
                summary = #{param.summary},
            ]]>
        </if>
        <if test="param.description != '' and param.description != null">
            <![CDATA[
                description = #{param.description},
            ]]>
        </if>
        <!--<if test="param.thumbImgName != '' and param.thumbImgName != null">-->
            <![CDATA[
                thumb_img_name = #{param.thumbImgName},
            ]]>
        <!--</if>-->
        <!--<if test="param.thumbImgPath != '' and param.thumbImgPath != null">-->
            <![CDATA[
                thumb_img_path = #{param.thumbImgPath},
            ]]>
        <!--</if>-->
        <if test="param.useYn != '' and param.useYn != null">
            <![CDATA[
                use_yn = #{param.useYn},
            ]]>
        </if>
        <if test="param.userId != '' and param.userId != null">
            <![CDATA[
                user_id = #{param.userId},
            ]]>
        </if>
        lastModified = now()
        WHERE
        <if test="param.no != '' and param.no != null">
            <![CDATA[
                starter_category.NO = #{param.no}
                RETURNING starter_category.no
            ]]>
        </if>

        ) UPDATE STARTER_BUILDPACK_RELATION SET
          starter_category_no = (select `no` FROM ins1),

        <if test="param.buildPackCategoryNo != '' and param.buildPackCategoryNo != null">
            <![CDATA[
                buildpack_category_no = #{param.buildPackCategoryNo}
            ]]>
        </if>
        WHERE starter_category_no = (SELECT `no` FROM ins1);
    </update>


    <delete id="deleteStarterCatalog">
        /* Catalog.deleteStarterCatalog */
        WITH ins1 AS (
            DELETE FROM starter_category
            WHERE 1=1
            <if test="no != '' and no != null">
                <![CDATA[
                AND `no` = #{no}
                RETURNING no
            ]]>
            </if>
        ) DELETE FROM STARTER_BUILDPACK_RELATION
          WHERE starter_category_no = (SELECT no FROM ins1);
    </delete>


    <delete id="deleteSelectedServicePackList">
        /* Catalog.insertSelectedServicePackList */
        DELETE FROM starter_servicepack_relation
        WHERE starter_category_no = #{starterCategoryNo}
    </delete>


    <select id="getCatalogHistoryList" resultType="org.openpaas.paasta.portal.api.model.Catalog">
        /* Catalog.getCatalogHistoryList */
        SELECT
            MAX(ch.no) AS "no",
            ch.catalog_no AS catalogNo,
            ch.catalog_type AS catalogType,
            MAX(ch.user_id) AS userId,
            MAX(ch.created) AS created,
            MAX(ch.lastModified) AS lastModified,
            COALESCE(
                CASE ch.catalog_type
                    WHEN 'starter' THEN (SELECT sc.name FROM starter_category sc WHERE sc.no = ch.catalog_no)
                    WHEN 'buildPack' THEN (SELECT bc.name FROM buildpack_category bc WHERE bc.no = ch.catalog_no)
                    WHEN 'servicePack' THEN (SELECT svc.name FROM servicepack_category svc WHERE svc.no = ch.catalog_no)
                    ELSE NULL END, ''
            ) AS "name",
            COALESCE(
                CASE ch.catalog_type
                    WHEN 'starter' THEN (SELECT sc.summary FROM starter_category sc WHERE sc.no = ch.catalog_no)
                    WHEN 'buildPack' THEN (SELECT bc.summary FROM buildpack_category bc WHERE bc.no = ch.catalog_no)
                    WHEN 'servicePack' THEN (SELECT svc.summary FROM servicepack_category svc WHERE svc.no = ch.catalog_no)
                    ELSE NULL END, ''
            ) AS summary,
            COALESCE(
                CASE ch.catalog_type
                    WHEN 'starter' THEN (SELECT sc.description FROM starter_category sc WHERE sc.no = ch.catalog_no)
                    WHEN 'buildPack' THEN (SELECT bc.description FROM buildpack_category bc WHERE bc.no = ch.catalog_no)
                    WHEN 'servicePack' THEN (SELECT svc.description FROM servicepack_category svc WHERE svc.no = ch.catalog_no)
                    ELSE NULL END, ''
            ) AS description,
            COALESCE(
                CASE ch.catalog_type
                    WHEN 'starter' THEN (SELECT sc.thumb_img_path FROM starter_category sc WHERE sc.no = ch.catalog_no)
                    WHEN 'buildPack' THEN (SELECT bc.thumb_img_path FROM buildpack_category bc WHERE bc.no = ch.catalog_no)
                    WHEN 'servicePack' THEN (SELECT svc.thumb_img_path FROM servicepack_category svc WHERE svc.no = ch.catalog_no)
                    ELSE NULL END, ''
            ) AS thumbImgPath
        FROM catalog_history ch
        WHERE 1=1
        <if test="no != '' and no != null">
            AND ch.no = #{no}
        </if>
        <if test="catalogNo != '' and catalogNo != null">
            ch.catalog_no = #{catalogNo},
        </if>
        <if test="catalogType != '' and catalogType != null">
            ch.catalog_type = #{catalogType},
        </if>
        GROUP BY ch.catalog_no, ch.catalog_type
        ORDER BY `no` DESC
        LIMIT #{limitSize}
    </select>


    <insert id="insertCatalogHistory">
        /* Catalog.insertCatalogHistory */
        INSERT INTO catalog_history (
            catalog_no,
            catalog_type,
            user_id,
            created,
            lastModified)
        VALUES (
            #{catalogNo},
            #{catalogType},
            #{userId},
            now(),
            now());
    </insert>


    <select id="getCatalogStarterRelationBuildPackList" resultType="org.openpaas.paasta.portal.api.model.Catalog">
        /* Catalog.getCatalogStarterRelationBuildPackList */
        SELECT
            <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.commonSearchColumns"/>,
            bc.buildpack_name AS buildPackName,
            (SELECT cd.value FROM code_detail cd WHERE cd.key = bc.classification AND cd.group_id = 'BUILD_PACK_CATALOG') AS classificationValue,
            (SELECT cd.summary FROM code_detail cd WHERE cd.key = bc.classification AND cd.group_id = 'BUILD_PACK_CATALOG') AS classificationSummary,
            bc.app_sample_file_name AS appSampleFileName,
            bc.app_sample_file_path AS appSampleFilePath,
            bc.app_sample_file_size AS appSampleFileSize
        FROM buildpack_category bc
        WHERE 1=1
        <if test="catalogNo != '' and catalogNo != null">
            AND bc.no = (SELECT sbr.buildpack_category_no FROM starter_buildpack_relation sbr WHERE sbr.starter_category_no = #{catalogNo})
        </if>
        ORDER BY bc.no DESC
    </select>


    <select id="getCatalogStarterRelationServicePackList" resultType="org.openpaas.paasta.portal.api.model.Catalog">
        /* Catalog.getCatalogStarterRelationServicePackList */
        SELECT
            <include refid="org.openpaas.paasta.portal.api.mapper.portal.CatalogMapper.commonSearchColumns"/>,
            sc.service_name AS servicePackName,
            (SELECT cd.value FROM code_detail cd WHERE cd.key = sc.classification AND cd.group_id = 'SERVICE_PACK_CATALOG') AS classificationValue,
            (SELECT cd.summary FROM code_detail cd WHERE cd.key = sc.classification AND cd.group_id = 'SERVICE_PACK_CATALOG') AS classificationSummary,
            sc.parameter AS parameter,
            sc.app_bind_parameter AS app_bind_parameter,
            sc.app_bind_yn AS appBindYn
        FROM servicepack_category sc
        WHERE 1=1
        <if test="catalogNo != '' and catalogNo != null">
            AND EXISTS (SELECT ssr.servicepack_category_no FROM starter_servicepack_relation ssr WHERE ssr.starter_category_no = #{catalogNo} AND sc.no = ssr.servicepack_category_no)
        </if>
        ORDER BY sc.no DESC
    </select>

</mapper>

